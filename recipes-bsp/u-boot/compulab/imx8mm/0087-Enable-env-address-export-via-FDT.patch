From a03c47222530b13facac0cc35a0af5842482534e Mon Sep 17 00:00:00 2001
From: Kirill Kapranov <kirill.kapranov@compulab.co.il>
Date: Mon, 21 Sep 2020 23:03:57 +0300
Subject: [PATCH 87/88] Enable env address export via FDT

Signed-off-by: Kirill Kapranov <kirill.kapranov@compulab.co.il>
---
 board/compulab/common/mmc.c              | 13 +++++++++++++
 board/compulab/plat/imx8mm/board/board.c | 18 +++++++++++++-----
 include/configs/cpl-imx8m-mini.h         | 14 +++++++++++++-
 3 files changed, 39 insertions(+), 6 deletions(-)

diff --git a/board/compulab/common/mmc.c b/board/compulab/common/mmc.c
index 9fc3e68728..0ae27737d4 100644
--- a/board/compulab/common/mmc.c
+++ b/board/compulab/common/mmc.c
@@ -10,6 +10,7 @@
 #include <asm/io.h>
 #include <stdbool.h>
 #include <mmc.h>
+#include <env_internal.h>
 
 static int check_mmc_autodetect(void)
 {
@@ -34,6 +35,8 @@ void board_late_mmc_env_init(void)
 	char cmd[32];
 	char mmcblk[32];
 	u32 dev_no = mmc_get_env_dev();
+	struct mmc *mmc = find_mmc_device(dev_no);
+	u32 env_addr;
 
 	if (!check_mmc_autodetect())
 		return;
@@ -47,4 +50,14 @@ void board_late_mmc_env_init(void)
 
 	sprintf(cmd, "mmc dev %d", dev_no);
 	run_command(cmd, 0);
+
+	if(!mmc_get_env_addr(mmc, 0, &env_addr)) {
+		env_set_hex("env_off", env_addr);
+		env_set_hex("env_size", CONFIG_ENV_SIZE);
+	} else {
+		env_set("env_off", NULL);
+		env_set("env_size", NULL);
+	}
+
+	return;
 }
diff --git a/board/compulab/plat/imx8mm/board/board.c b/board/compulab/plat/imx8mm/board/board.c
index 5b751e0eb8..31bf30b7e9 100644
--- a/board/compulab/plat/imx8mm/board/board.c
+++ b/board/compulab/plat/imx8mm/board/board.c
@@ -230,21 +230,29 @@ int board_mmc_get_env_dev(int devno)
 	return devno;
 }
 
-static int _mmc_get_env_part(void)
+static int _mmc_get_env_part(struct mmc *mmc)
 {
 	const ulong user_env_part = env_get_hex("env_part", ULONG_MAX);
 	if (user_env_part != ULONG_MAX) {
 		printf("User Environment part# is (%lu)\n", user_env_part);
 		return (int)user_env_part;
 	}
-	return CONFIG_SYS_MMC_ENV_PART;
+
+	return EXT_CSD_EXTRACT_BOOT_PART(mmc->part_config);
 }
 
 uint mmc_get_env_part(struct mmc *mmc)
 {
-	if (mmc->part_support)
-	    return _mmc_get_env_part();
-
+	if (mmc->part_support && mmc->part_config != MMCPART_NOAVAILABLE) {
+		uint partno = _mmc_get_env_part(mmc);
+		env_set_hex("env_part", partno);
+		return partno;
+	}
+	else {
+		printf("%s:%d doesn't support HW part: reset env_part var\n",
+			mmc->cfg->name, mmc_get_blk_desc(mmc)->devnum);
+		env_set("env_part", NULL);
+	}
 	return 0;
 }
 
diff --git a/include/configs/cpl-imx8m-mini.h b/include/configs/cpl-imx8m-mini.h
index dd8120f4dc..6f846d080e 100644
--- a/include/configs/cpl-imx8m-mini.h
+++ b/include/configs/cpl-imx8m-mini.h
@@ -117,6 +117,17 @@
 	"mmcroot=" CONFIG_MMCROOT " rootwait rw\0" \
 	"mmcautodetect=yes\0" \
 	"root_opt=rootwait rw\0" \
+	"env2dt=" \
+		"if env exists env_off; then " \
+			"fdt addr $fdt_addr; fdt resize 100; " \
+			"fdt mknode / fw_env;" \
+			"if env exists env_part; then " \
+				"fdt set /fw_env env_part ${env_part};" \
+			"fi; " \
+			"fdt set /fw_env env_dev ${mmcdev};" \
+			"fdt set /fw_env env_off 0x${env_off}; " \
+			"fdt set /fw_env env_size 0x${env_size}; " \
+		"fi; true;\0" \
 	"emmc_ul=setenv iface mmc; setenv dev 2; setenv part 1;" \
 	"setenv bootargs console=${console} root=/dev/mmcblk2p2 ${root_opt};\0" \
 	"sd_ul=setenv iface mmc; setenv dev 1; setenv part 1;" \
@@ -126,7 +137,8 @@
 	"ulbootscript=load ${iface} ${dev}:${part} ${loadaddr} ${script};\0" \
 	"ulimage=load ${iface} ${dev}:${part} ${loadaddr} ${image}\0" \
 	"ulfdt=if test ${boot_fdt} = yes || test ${boot_fdt} = try; then " \
-		"load ${iface} ${dev}:${part} ${fdt_addr} ${fdt_file}; fi;\0" \
+		"if load ${iface} ${dev}:${part} ${fdt_addr} ${fdt_file};" \
+		" then run env2dt; fi; fi;\0" \
 	"bootscript=echo Running bootscript from mmc ...; " \
 		"source\0" \
 	"netargs=setenv bootargs console=${console} " \
-- 
2.11.0

