From 60808b0bd39e66a4cc44075a480e53367a0e89ed Mon Sep 17 00:00:00 2001
From: Kirill Kapranov <kirill.kapranov@compulab.co.il>
Date: Wed, 1 Apr 2020 14:48:32 +0300
Subject: [PATCH 33/52] fsl esdhc: wp refactoring

Write protection subsystem for SDHC devices refactored.
Add the WP check in 'erase' workflow

Signed-off-by: Kirill Kapranov <kirill.kapranov@compulab.co.il>
---
 drivers/mmc/fsl_esdhc.c | 53 +++++++++++++++++++++++++++++++++++++------------
 1 file changed, 40 insertions(+), 13 deletions(-)

diff --git a/drivers/mmc/fsl_esdhc.c b/drivers/mmc/fsl_esdhc.c
index dc1c144363..5960425f7f 100644
--- a/drivers/mmc/fsl_esdhc.c
+++ b/drivers/mmc/fsl_esdhc.c
@@ -152,6 +152,26 @@ struct fsl_esdhc_priv {
 #endif
 };
 
+static int esdhc_getwp_common(struct fsl_esdhc_priv *priv)
+{
+	struct fsl_esdhc *regs = priv->esdhc_regs;
+	if (priv->wp_enable) {
+		if ((esdhc_read32(&regs->prsstat) & PRSSTAT_WPSPL) == 0) {
+			printf("\nThe SD card is locked. Can not write to a locked card.\n\n");
+			return 1;
+		}
+	} else {
+#ifdef CONFIG_DM_GPIO
+		if (dm_gpio_is_valid(&priv->wp_gpio) && dm_gpio_get_value(&priv->wp_gpio)) {
+			printf("\nThe SD card is locked. Can not write to a locked card.\n\n");
+			return 1;
+		}
+#endif
+	}
+	return 0;
+
+}
+
 /* Return the XFERTYP flags for a given command and data packet */
 static uint esdhc_xfertyp(struct mmc_cmd *cmd, struct mmc_data *data)
 {
@@ -294,19 +314,10 @@ static int esdhc_setup_data(struct fsl_esdhc_priv *priv, struct mmc *mmc,
 #endif
 		if (wml_value > WML_WR_WML_MAX)
 			wml_value = WML_WR_WML_MAX_VAL;
-		if (priv->wp_enable) {
-			if ((esdhc_read32(&regs->prsstat) &
-			    PRSSTAT_WPSPL) == 0) {
-				printf("\nThe SD card is locked. Can not write to a locked card.\n\n");
-				return -ETIMEDOUT;
-			}
-		} else {
-#ifdef CONFIG_DM_GPIO
-			if (dm_gpio_is_valid(&priv->wp_gpio) && dm_gpio_get_value(&priv->wp_gpio)) {
-				printf("\nThe SD card is locked. Can not write to a locked card.\n\n");
-				return -ETIMEDOUT;
-			}
-#endif
+
+		if(esdhc_getwp_common(priv)){
+			printf("\nThe SD card is locked. Can not write to a locked card.\n\n");
+			return -ETIMEDOUT;
 		}
 
 		esdhc_clrsetbits32(&regs->wml, WML_WR_WML_MASK,
@@ -1136,6 +1147,13 @@ static int esdhc_reset(struct fsl_esdhc *regs)
 }
 
 #if !CONFIG_IS_ENABLED(DM_MMC)
+static int esdhc_getwp(struct mmc *mmc)
+{
+	struct fsl_esdhc_priv *priv = mmc->priv;
+
+	return esdhc_getwp_common(priv);
+}
+
 static int esdhc_getcd(struct mmc *mmc)
 {
 	struct fsl_esdhc_priv *priv = mmc->priv;
@@ -1166,6 +1184,7 @@ static int esdhc_set_ios(struct mmc *mmc)
 }
 
 static const struct mmc_ops esdhc_ops = {
+	.getwp		= esdhc_getwp,
 	.getcd		= esdhc_getcd,
 	.init		= esdhc_init,
 	.send_cmd	= esdhc_send_cmd,
@@ -1624,6 +1643,13 @@ static int fsl_esdhc_probe(struct udevice *dev)
 }
 
 #if CONFIG_IS_ENABLED(DM_MMC)
+static int fsl_esdhc_get_wp(struct udevice *dev)
+{
+	struct fsl_esdhc_priv *priv = dev_get_priv(dev);
+
+	return esdhc_getwp_common(priv);
+}
+
 static int fsl_esdhc_get_cd(struct udevice *dev)
 {
 	struct fsl_esdhc_priv *priv = dev_get_priv(dev);
@@ -1662,6 +1688,7 @@ static void fsl_esdhc_set_enhanced_strobe(struct udevice *dev)
 #endif
 
 static const struct dm_mmc_ops fsl_esdhc_ops = {
+	.get_wp		= fsl_esdhc_get_wp,
 	.get_cd		= fsl_esdhc_get_cd,
 	.send_cmd	= fsl_esdhc_send_cmd,
 	.set_ios	= fsl_esdhc_set_ios,
-- 
2.11.0

