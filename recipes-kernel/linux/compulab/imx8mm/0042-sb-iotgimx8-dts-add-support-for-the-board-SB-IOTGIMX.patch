From b5bab5af6b2e455c7d37315bc8a5e435bee4d3bc Mon Sep 17 00:00:00 2001
From: Uri Mashiach <uri.mashiach@compulab.co.il>
Date: Sun, 26 Jan 2020 10:58:03 +0200
Subject: [PATCH 42/43] sb-iotgimx8 dts: add support for the board SB-IOTGIMX8

The SB-IOTGIMX8 is the baseboard for the IOT-GATE-iMX8.
The following device tree source files are added:
sb-iotgimx8.dts - SB-IOTGIMX8 without expansion board.
sb-iotgimx8-display.dts - SB-IOTGIMX8 with the expansion board display.
sb-iotgimx8-gpio.dts - SB-IOTGIMX8 with the expansion board GPIO.
sb-iotgimx8-peripheral.dts - SB-IOTGIMX8 with the expansion board peripheral.
sb-iotgimx8-can.dts - SB-IOTGIMX8 with the expansion board CAN bus.

Signed-off-by: Uri Mashiach <uri.mashiach@compulab.co.il>
---
 arch/arm64/boot/dts/compulab/Makefile              |   7 +
 arch/arm64/boot/dts/compulab/sb-iotgimx8-can.dts   | 141 +++++++++++
 .../boot/dts/compulab/sb-iotgimx8-display.dts      |  47 ++++
 arch/arm64/boot/dts/compulab/sb-iotgimx8-gpio.dts  |  38 +++
 .../boot/dts/compulab/sb-iotgimx8-peripheral.dts   |  99 ++++++++
 arch/arm64/boot/dts/compulab/sb-iotgimx8.dts       | 279 +++++++++++++++++++++
 6 files changed, 611 insertions(+)
 create mode 100644 arch/arm64/boot/dts/compulab/sb-iotgimx8-can.dts
 create mode 100644 arch/arm64/boot/dts/compulab/sb-iotgimx8-display.dts
 create mode 100644 arch/arm64/boot/dts/compulab/sb-iotgimx8-gpio.dts
 create mode 100644 arch/arm64/boot/dts/compulab/sb-iotgimx8-peripheral.dts
 create mode 100644 arch/arm64/boot/dts/compulab/sb-iotgimx8.dts

diff --git a/arch/arm64/boot/dts/compulab/Makefile b/arch/arm64/boot/dts/compulab/Makefile
index 357eac58c464..945e10aef752 100644
--- a/arch/arm64/boot/dts/compulab/Makefile
+++ b/arch/arm64/boot/dts/compulab/Makefile
@@ -3,6 +3,13 @@ dtb-$(CONFIG_ARCH_FSL_IMX8MM) += ucm-imx8m-mini-thermal.dtb
 dtb-$(CONFIG_ARCH_FSL_IMX8MM) += ucm-imx8m-mini-lvds.dtb
 dtb-$(CONFIG_ARCH_FSL_IMX8MM) += ucm-imx8m-mini-dsi2.dtb
 dtb-$(CONFIG_ARCH_FSL_IMX8MM) += ucm-imx8m-mini-m4.dtb
+dtb-$(CONFIG_ARCH_FSL_IMX8MM) += ucm-imx8m-mini.dtb
+dtb-$(CONFIG_ARCH_FSL_IMX8MM) += sb-ucm-imx8-rev2.dtb
+dtb-$(CONFIG_ARCH_FSL_IMX8MM) += sb-iotgimx8.dtb
+dtb-$(CONFIG_ARCH_FSL_IMX8MM) += sb-iotgimx8-gpio.dtb
+dtb-$(CONFIG_ARCH_FSL_IMX8MM) += sb-iotgimx8-peripheral.dtb
+dtb-$(CONFIG_ARCH_FSL_IMX8MM) += sb-iotgimx8-display.dtb
+dtb-$(CONFIG_ARCH_FSL_IMX8MM) += sb-iotgimx8-can.dtb
 
 always         := $(dtb-y)
 subdir-y       := $(dts-dirs)
diff --git a/arch/arm64/boot/dts/compulab/sb-iotgimx8-can.dts b/arch/arm64/boot/dts/compulab/sb-iotgimx8-can.dts
new file mode 100644
index 000000000000..6a0fc8c709d7
--- /dev/null
+++ b/arch/arm64/boot/dts/compulab/sb-iotgimx8-can.dts
@@ -0,0 +1,141 @@
+/*
+ * Copyright (C) 2020 CompuLab Ltd.
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation; either version 2
+ * of the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
+ * GNU General Public License for more details.
+ */
+
+#include "sb-iotgimx8.dts"
+
+/ {
+	model = "CompuLab SB-IOTGIMX8 board + CAN bus extension";
+	compatible = "sb-iotgimx8-can", "sb-iotgimx8", "cpl,ucm-imx8m-mini", "fsl,imx8mm";
+
+	clocks {
+		clk40m: clk@1 {
+			compatible = "fixed-clock";
+			reg = <1>;
+			#clock-cells = <0>;
+			clock-frequency = <40000000>;
+			clock-output-names = "clk40m";
+		};
+	};
+
+	regulator-can0term {
+		compatible = "regulator-fixed";
+		regulator-name = "can0_term";
+		regulator-min-microvolt = <3300000>;
+		regulator-max-microvolt = <3300000>;
+		gpio = <&gpio3 8 GPIO_ACTIVE_LOW>;
+		regulator-always-on;
+		enable-active-low;
+	};
+
+	regulator-can1term {
+		compatible = "regulator-fixed";
+		regulator-name = "can1_term";
+		regulator-min-microvolt = <3300000>;
+		regulator-max-microvolt = <3300000>;
+		gpio = <&gpio3 9 GPIO_ACTIVE_LOW>;
+		regulator-always-on;
+		enable-active-low;
+	};
+};
+
+&ecspi2 {
+	#address-cells = <1>;
+	#size-cells = <0>;
+	fsl,spi-num-chipselects = <1>;
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_ecspi2 &pinctrl_ecspi2_cs>;
+	cs-gpios = <&gpio5 13 GPIO_ACTIVE_LOW>;
+	status = "okay";
+
+	can0: can@0 {
+		compatible = "microchip,mcp2518fd";
+		reg = <0>;
+		pinctrl-names = "default";
+		pinctrl-0 = <&pinctrl_can0>;
+		interrupt-parent = <&gpio5>;
+		interrupts = <0 IRQ_TYPE_LEVEL_LOW>;
+		spi-max-frequency = <10000000>;
+		clocks = <&clk40m>;
+	};
+};
+
+&ecspi3 {
+	#address-cells = <1>;
+	#size-cells = <0>;
+	fsl,spi-num-chipselects = <1>;
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_ecspi3 &pinctrl_ecspi3_cs>;
+	cs-gpios = <&gpio5 25 GPIO_ACTIVE_LOW>;
+	status = "okay";
+
+	can1: can@0 {
+		compatible = "microchip,mcp2518fd";
+		reg = <0>;
+		pinctrl-names = "default";
+		pinctrl-0 = <&pinctrl_can1>;
+		interrupt-parent = <&gpio5>;
+		interrupts = <28 IRQ_TYPE_LEVEL_LOW>;
+		spi-max-frequency = <10000000>;
+		clocks = <&clk40m>;
+	};
+};
+
+&iomuxc {
+	sb-ucm-imx8-can {
+		pinctrl_ecspi2: ecspi2grp {
+			fsl,pins = <
+				MX8MM_IOMUXC_ECSPI2_SCLK_ECSPI2_SCLK	0x02
+				MX8MM_IOMUXC_ECSPI2_MOSI_ECSPI2_MOSI	0x02
+				MX8MM_IOMUXC_ECSPI2_MISO_ECSPI2_MISO	0x102
+			>;
+		};
+
+		pinctrl_ecspi2_cs: ecspi2_csgrp {
+			fsl,pins = <
+				MX8MM_IOMUXC_ECSPI2_SS0_GPIO5_IO13	0x40000
+			>;
+		};
+
+		pinctrl_ecspi3: ecspi3grp {
+			fsl,pins = <
+				MX8MM_IOMUXC_UART1_RXD_ECSPI3_SCLK	0x02
+				MX8MM_IOMUXC_UART1_TXD_ECSPI3_MOSI	0x02
+				MX8MM_IOMUXC_UART2_RXD_ECSPI3_MISO	0x102
+			>;
+		};
+
+		pinctrl_ecspi3_cs: ecspi3_csgrp {
+			fsl,pins = <
+				MX8MM_IOMUXC_UART2_TXD_GPIO5_IO25	0x40000
+			>;
+		};
+
+
+		pinctrl_can0: can0grp {
+			fsl,pins = <
+				MX8MM_IOMUXC_SAI3_TXC_GPIO5_IO0		0x00
+				MX8MM_IOMUXC_NAND_DATA02_GPIO3_IO8	0x00
+			>;
+		};
+
+		pinctrl_can1: can1grp {
+			fsl,pins = <
+				MX8MM_IOMUXC_UART4_RXD_GPIO5_IO28	0x00
+				MX8MM_IOMUXC_NAND_DATA03_GPIO3_IO9	0x00
+			>;
+		};
+	};
+};
+
+
diff --git a/arch/arm64/boot/dts/compulab/sb-iotgimx8-display.dts b/arch/arm64/boot/dts/compulab/sb-iotgimx8-display.dts
new file mode 100644
index 000000000000..4c15a3641246
--- /dev/null
+++ b/arch/arm64/boot/dts/compulab/sb-iotgimx8-display.dts
@@ -0,0 +1,47 @@
+/*
+ * Copyright (C) 2020 CompuLab Ltd.
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation; either version 2
+ * of the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
+ * GNU General Public License for more details.
+ */
+
+#include "sb-iotgimx8.dts"
+
+&gpu {
+	status = "okay";
+};
+
+&vpu_g1 {
+	status = "okay";
+};
+
+&vpu_g2 {
+	status = "okay";
+};
+
+&vpu_h1 {
+	status = "okay";
+};
+
+&lcdif {
+	status = "okay";
+};
+
+&mipi_dsi {
+	status = "disabled"; /* Enable by U-Boot */
+	panel: panel@0 {
+		compatible = "startek,kd050hdfia020";
+		reg = <0>;
+/*		reset-gpio = <&pca9555 6 GPIO_ACTIVE_LOW>; DISP Reset ???*/
+		dsi-lanes = <4>;
+		status = "okay";
+	};
+};
+
diff --git a/arch/arm64/boot/dts/compulab/sb-iotgimx8-gpio.dts b/arch/arm64/boot/dts/compulab/sb-iotgimx8-gpio.dts
new file mode 100644
index 000000000000..decb5f6258ea
--- /dev/null
+++ b/arch/arm64/boot/dts/compulab/sb-iotgimx8-gpio.dts
@@ -0,0 +1,38 @@
+/*
+ * Copyright (C) 2020 CompuLab Ltd.
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation; either version 2
+ * of the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
+ * GNU General Public License for more details.
+ */
+
+#include "sb-iotgimx8.dts"
+
+&pinctrl_hog_2 {
+	fsl,pins = <
+		MX8MM_IOMUXC_NAND_ALE_GPIO3_IO0		0x000
+		MX8MM_IOMUXC_NAND_CE0_B_GPIO3_IO1	0x000
+		MX8MM_IOMUXC_NAND_DATA00_GPIO3_IO6	0x000
+		MX8MM_IOMUXC_NAND_DATA01_GPIO3_IO7	0x000
+		MX8MM_IOMUXC_NAND_DATA02_GPIO3_IO8	0x000
+		MX8MM_IOMUXC_NAND_DATA03_GPIO3_IO9	0x000
+		MX8MM_IOMUXC_SAI3_TXFS_GPIO4_IO31	0x000
+		MX8MM_IOMUXC_SAI3_TXC_GPIO5_IO0		0x000
+		MX8MM_IOMUXC_ECSPI2_SCLK_GPIO5_IO10	0x000
+		MX8MM_IOMUXC_ECSPI2_MOSI_GPIO5_IO11	0x000
+		MX8MM_IOMUXC_ECSPI2_MISO_GPIO5_IO12	0x000
+		MX8MM_IOMUXC_ECSPI2_SS0_GPIO5_IO13	0x000
+		MX8MM_IOMUXC_UART1_RXD_GPIO5_IO22	0x000
+		MX8MM_IOMUXC_UART1_TXD_GPIO5_IO23	0x000
+		MX8MM_IOMUXC_UART2_RXD_GPIO5_IO24	0x000
+		MX8MM_IOMUXC_UART2_TXD_GPIO5_IO25	0x000
+		MX8MM_IOMUXC_UART3_RXD_GPIO5_IO26	0x000
+		MX8MM_IOMUXC_UART4_RXD_GPIO5_IO28	0x000
+	>;
+};
diff --git a/arch/arm64/boot/dts/compulab/sb-iotgimx8-peripheral.dts b/arch/arm64/boot/dts/compulab/sb-iotgimx8-peripheral.dts
new file mode 100644
index 000000000000..e03c15b3cb57
--- /dev/null
+++ b/arch/arm64/boot/dts/compulab/sb-iotgimx8-peripheral.dts
@@ -0,0 +1,99 @@
+/*
+ * Copyright (C) 2020 CompuLab Ltd.
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation; either version 2
+ * of the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
+ * GNU General Public License for more details.
+ */
+
+#include "sb-iotgimx8.dts"
+
+&uart2 {
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_uart2>;
+	status = "okay";
+};
+
+&ecspi2 {
+	#address-cells = <1>;
+	#size-cells = <0>;
+	fsl,spi-num-chipselects = <1>;
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_ecspi2 &pinctrl_ecspi2_cs>;
+	cs-gpios = <&gpio5 13 GPIO_ACTIVE_LOW>;
+	status = "okay";
+};
+
+&ecspi3 {
+	#address-cells = <1>;
+	#size-cells = <0>;
+	fsl,spi-num-chipselects = <1>;
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_ecspi3 &pinctrl_ecspi3_cs>;
+	cs-gpios = <&gpio5 13 GPIO_ACTIVE_LOW>;
+	status = "okay";
+};
+
+&flexspi {
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_flexspi0>;
+	status = "okay";
+};
+
+&iomuxc {
+	sb-iotgimx8 {
+		pinctrl_uart2: uart2grp {
+			fsl,pins = <
+				MX8MM_IOMUXC_SAI3_TXFS_UART2_DCE_RX	0x140
+				MX8MM_IOMUXC_SAI3_TXC_UART2_DTE_TX	0x140
+				MX8MM_IOMUXC_UART4_TXD_UART2_DCE_RTS_B	0x140
+				MX8MM_IOMUXC_UART3_TXD_UART1_DTE_CTS_B	0x140
+			>;
+		};
+
+		pinctrl_ecspi2: ecspi2grp {
+			fsl,pins = <
+				MX8MM_IOMUXC_ECSPI2_SCLK_ECSPI2_SCLK	0x82
+				MX8MM_IOMUXC_ECSPI2_MOSI_ECSPI2_MOSI	0x82
+				MX8MM_IOMUXC_ECSPI2_MISO_ECSPI2_MISO	0x82
+			>;
+		};
+
+		pinctrl_ecspi2_cs: ecspi2cs {
+			fsl,pins = <
+				MX8MM_IOMUXC_ECSPI2_SS0_GPIO5_IO13	0x40000
+			>;
+		};
+
+		pinctrl_ecspi3: ecspi3grp {
+			fsl,pins = <
+				MX8MM_IOMUXC_UART1_RXD_ECSPI3_SCLK	0x82
+				MX8MM_IOMUXC_UART1_TXD_ECSPI3_MOSI	0x82
+				MX8MM_IOMUXC_UART2_RXD_ECSPI3_MISO	0x82
+			>;
+		};
+
+		pinctrl_ecspi3_cs: ecspi3cs {
+			fsl,pins = <
+				MX8MM_IOMUXC_UART2_TXD_GPIO5_IO25	0x40000
+			>;
+		};
+
+		pinctrl_flexspi0: flexspi0grp {
+			fsl,pins = <
+				MX8MM_IOMUXC_NAND_ALE_QSPI_A_SCLK		0x1c2
+				MX8MM_IOMUXC_NAND_CE0_B_QSPI_A_SS0_B		0x82
+				MX8MM_IOMUXC_NAND_DATA00_QSPI_A_DATA0		0x82
+				MX8MM_IOMUXC_NAND_DATA01_QSPI_A_DATA1		0x82
+				MX8MM_IOMUXC_NAND_DATA02_QSPI_A_DATA2		0x82
+				MX8MM_IOMUXC_NAND_DATA03_QSPI_A_DATA3		0x82
+			>;
+		};
+	};
+};
diff --git a/arch/arm64/boot/dts/compulab/sb-iotgimx8.dts b/arch/arm64/boot/dts/compulab/sb-iotgimx8.dts
new file mode 100644
index 000000000000..ba5dbdcad028
--- /dev/null
+++ b/arch/arm64/boot/dts/compulab/sb-iotgimx8.dts
@@ -0,0 +1,279 @@
+/*
+ * Copyright (C) 2020 CompuLab Ltd.
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation; either version 2
+ * of the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
+ * GNU General Public License for more details.
+ */
+
+#include "ucm-imx8m-mini.dts"
+
+/ {
+	model = "CompuLab SB-IOTGIMX8 board";
+	compatible = "sb-iotgimx8", "cpl,ucm-imx8m-mini", "fsl,imx8mm";
+
+	regulator-usbhub-ena {
+		compatible = "regulator-fixed";
+		regulator-name = "usbhub_ena";
+		regulator-min-microvolt = <3300000>;
+		regulator-max-microvolt = <3300000>;
+		gpio = <&gpio4 28 GPIO_ACTIVE_HIGH>;
+		regulator-always-on;
+		enable-active-high;
+	};
+
+	regulator-usbhub-rst {
+		compatible = "regulator-fixed";
+		regulator-name = "usbhub_rst";
+		regulator-min-microvolt = <3300000>;
+		regulator-max-microvolt = <3300000>;
+		gpio = <&gpio3 24 GPIO_ACTIVE_HIGH>;
+		regulator-always-on;
+		enable-active-high;
+	};
+
+	regulator-uart1-mode {
+		compatible = "regulator-fixed";
+		regulator-name = "uart1_mode";
+		regulator-min-microvolt = <3300000>;
+		regulator-max-microvolt = <3300000>;
+		gpio = <&gpio4 26 GPIO_ACTIVE_HIGH>;
+		enable-active-high;
+		regulator-always-on;
+	};
+
+	regulator-uart1-duplex {
+		compatible = "regulator-fixed";
+		regulator-name = "uart1_duplex";
+		regulator-min-microvolt = <3300000>;
+		regulator-max-microvolt = <3300000>;
+		gpio = <&gpio4 27 GPIO_ACTIVE_HIGH>;
+		regulator-always-on;
+		enable-active-high;
+	};
+
+	regulator-uart1-shdn {
+		compatible = "regulator-fixed";
+		regulator-name = "uart1_shdn";
+		regulator-min-microvolt = <3300000>;
+		regulator-max-microvolt = <3300000>;
+		gpio = <&gpio5 5 GPIO_ACTIVE_HIGH>;
+		regulator-always-on;
+		enable-active-high;
+	};
+
+	regulator-uart1-trmen {
+		compatible = "regulator-fixed";
+		regulator-name = "uart1_trmen";
+		regulator-min-microvolt = <3300000>;
+		regulator-max-microvolt = <3300000>;
+		gpio = <&gpio4 25 GPIO_ACTIVE_LOW>;
+		regulator-always-on;
+		enable-active-low;
+	};
+
+	regulator-usdhc2_v {
+		compatible = "regulator-fixed";
+		regulator-name = "usdhc2_v";
+		regulator-min-microvolt = <3300000>;
+		regulator-max-microvolt = <3300000>;
+		gpio = <&gpio1 4 GPIO_ACTIVE_HIGH>;
+		regulator-always-on;
+		enable-active-high;
+	};
+
+	regulator-usdhc2rst {
+		compatible = "regulator-fixed";
+		regulator-name = "usdhc2_rst";
+		regulator-min-microvolt = <3300000>;
+		regulator-max-microvolt = <3300000>;
+		gpio = <&gpio2 19 GPIO_ACTIVE_HIGH>;
+		regulator-always-on;
+		enable-active-high;
+	};
+};
+
+&uart1 {
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_uart1 &pinctrl_uart1_gpio>;
+	assigned-clocks = <&clk IMX8MM_CLK_UART1_SRC>;
+	assigned-clock-parents = <&clk IMX8MM_SYS_PLL1_80M>;
+	linux,rs485-enabled-at-boot-time;
+	rs485-rts-active-high;
+	rts-gpios = <&gpio4 24 GPIO_ACTIVE_LOW>;
+	status = "okay";
+};
+
+&uart4 {
+	status = "disabled";
+};
+
+&i2c1 {
+	clock-frequency = <100000>;
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_i2c1>;
+	status = "okay";
+
+	eeprom@54 {
+		compatible = "atmel,24c08";
+		reg = <0x54>;
+		pagesize = <16>;
+	};
+};
+
+&i2c4 {/* Expansion connector I2C */
+	clock-frequency = <100000>;
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_i2c4>;
+	status = "okay";
+};
+
+&ecspi1 {
+	#address-cells = <1>;
+	#size-cells = <0>;
+	fsl,spi-num-chipselects = <1>;
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_ecspi1 &pinctrl_ecspi1_cs>;
+	cs-gpios = <&gpio5 9 GPIO_ACTIVE_LOW>;
+	status = "okay";
+};
+
+&usbotg1 {
+	dr_mode = "host";
+	status = "okay";
+};
+
+&usbotg2 {
+	dr_mode = "host";
+	status = "okay";
+
+	#address-cells = <1>;
+	#size-cells = <0>;
+
+	usb9514@1 {
+		compatible = "usb424,9514";
+		pinctrl-names = "default";
+		pinctrl-0 = <&pinctrl_usb9514>;
+		reg = <1>;
+		#address-cells = <1>;
+		#size-cells = <0>;
+
+		ethernet: usbether@1 {
+			compatible = "usb424,ec00";
+			reg = <1>;
+		};
+	};
+};
+
+&usdhc1 {
+	status = "disabled";
+};
+
+&usdhc2 {
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_usdhc2>;
+	bus-width = <4>;
+	mmc-ddr-1_8v;
+	non-removable;
+	status = "okay";
+};
+
+&pcie0 {
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_pcie0>;
+	reset-gpio = <&gpio3 20 GPIO_ACTIVE_LOW>;
+	ext_osc = <1>;
+	status = "okay";
+};
+
+&iomuxc {
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_hog_2>;
+
+	sb-iotgimx8 {
+		pinctrl_hog_2: hoggrp-2 {
+			fsl,pins = <
+				/* mPCIe2 */
+				MX8MM_IOMUXC_SAI5_RXD0_GPIO3_IO21	0x140 /* mPCIe2_LORA_DISABLE */
+				MX8MM_IOMUXC_SAI5_RXD1_GPIO3_IO22	0x140 /* mPCIe2_PERSTn */
+			>;
+		};
+
+		pinctrl_uart1: uart1grp {
+			fsl,pins = <
+				MX8MM_IOMUXC_SAI2_RXC_UART1_DCE_RX	0x140
+				MX8MM_IOMUXC_SAI2_RXFS_UART1_DCE_TX	0x140
+				MX8MM_IOMUXC_SAI2_TXFS_GPIO4_IO24	0x140 /* RTS */
+			>;
+		};
+
+		pinctrl_uart1_gpio: uart1gpiogrp {
+			fsl,pins = <
+				MX8MM_IOMUXC_SAI2_TXD0_GPIO4_IO26	0x000 /* RS_485_232_SEL */
+				MX8MM_IOMUXC_SAI2_MCLK_GPIO4_IO27	0x140 /* RS_485_H/F_SEL */
+				MX8MM_IOMUXC_SPDIF_EXT_CLK_GPIO5_IO5	0x140 /* SHDN */
+				MX8MM_IOMUXC_SAI2_TXC_GPIO4_IO25	0x140 /* RS_485_TRMEN */
+			>;
+		};
+
+		pinctrl_i2c1: i2c1grp {
+			fsl,pins = <
+				MX8MM_IOMUXC_I2C1_SCL_I2C1_SCL		0x400001c3
+				MX8MM_IOMUXC_I2C1_SDA_I2C1_SDA		0x400001c3
+			>;
+		};
+
+		pinctrl_i2c4: i2c4grp {
+			fsl,pins = <
+				MX8MM_IOMUXC_I2C4_SCL_I2C4_SCL		0x400001c3
+				MX8MM_IOMUXC_I2C4_SDA_I2C4_SDA		0x400001c3
+			>;
+		};
+
+		pinctrl_ecspi1: ecspi1grp {
+			fsl,pins = <
+				MX8MM_IOMUXC_ECSPI1_SCLK_ECSPI1_SCLK	0x82
+				MX8MM_IOMUXC_ECSPI1_MOSI_ECSPI1_MOSI	0x82
+				MX8MM_IOMUXC_ECSPI1_MISO_ECSPI1_MISO	0x82
+			>;
+		};
+
+		pinctrl_ecspi1_cs: ecspi1cs {
+			fsl,pins = <
+				MX8MM_IOMUXC_ECSPI1_SS0_GPIO5_IO9	0x40000
+			>;
+		};
+
+		pinctrl_usb9514: usb9514grp {
+			fsl,pins = <
+				MX8MM_IOMUXC_SAI3_RXFS_GPIO4_IO28	0x140 /* USB_PS_EN */
+				MX8MM_IOMUXC_SAI5_RXD3_GPIO3_IO24	0x140 /* HUB_RSTn */
+			>;
+		};
+
+		pinctrl_usdhc2: usdhc2grp {
+			fsl,pins = <
+				MX8MM_IOMUXC_SD2_CLK_USDHC2_CLK		0x190
+				MX8MM_IOMUXC_SD2_CMD_USDHC2_CMD		0x1d0
+				MX8MM_IOMUXC_SD2_DATA0_USDHC2_DATA0	0x1d0
+				MX8MM_IOMUXC_SD2_DATA1_USDHC2_DATA1	0x1d0
+				MX8MM_IOMUXC_SD2_DATA2_USDHC2_DATA2	0x1d0
+				MX8MM_IOMUXC_SD2_DATA3_USDHC2_DATA3	0x1d0
+				MX8MM_IOMUXC_GPIO1_IO04_GPIO1_IO4	0x1d0 /* SD2_VSEL */
+				MX8MM_IOMUXC_SD2_RESET_B_GPIO2_IO19	0x41  /* EMMC_RST */
+			>;
+		};
+
+		pinctrl_pcie0: pcie0grp {
+			fsl,pins = <
+				MX8MM_IOMUXC_SAI5_RXC_GPIO3_IO20	0x140
+			>;
+		};
+	};
+};
-- 
2.11.0

