From ff2c6428838d4b74550f062569e5e6323de49653 Mon Sep 17 00:00:00 2001
From: Uri Mashiach <uri.mashiach@compulab.co.il>
Date: Wed, 13 Jan 2021 10:58:11 +0200
Subject: [PATCH 47/51] can: mcp25xxfd: fix !CONFIG_DEBUG_FS commpilation

Error messages are generated when the compilation flag CONFIG_DEBUG_FS
is disabled.

Conditioned the relevant code with CONFIG_DEBUG_FS.

Signed-off-by: Uri Mashiach <uri.mashiach@compulab.co.il>
---
 drivers/net/can/spi/mcp25xxfd/mcp25xxfd_can.c         |  2 ++
 drivers/net/can/spi/mcp25xxfd/mcp25xxfd_can_debugfs.h |  2 +-
 drivers/net/can/spi/mcp25xxfd/mcp25xxfd_can_rx.c      | 12 +++++++++++-
 drivers/net/can/spi/mcp25xxfd/mcp25xxfd_can_tx.c      |  2 ++
 drivers/net/can/spi/mcp25xxfd/mcp25xxfd_cmd.c         |  4 +++-
 drivers/net/can/spi/mcp25xxfd/mcp25xxfd_debugfs.h     |  1 -
 6 files changed, 19 insertions(+), 4 deletions(-)

diff --git a/drivers/net/can/spi/mcp25xxfd/mcp25xxfd_can.c b/drivers/net/can/spi/mcp25xxfd/mcp25xxfd_can.c
index 187717a3623e..2e51752d2f69 100644
--- a/drivers/net/can/spi/mcp25xxfd/mcp25xxfd_can.c
+++ b/drivers/net/can/spi/mcp25xxfd/mcp25xxfd_can.c
@@ -482,8 +482,10 @@ static int mcp25xxfd_can_open(struct net_device *net)
 		return ret;
 	}
 
+#ifdef CONFIG_DEBUG_FS
 	/* clear those statistics */
 	memset(&cpriv->stats, 0, sizeof(cpriv->stats));
+#endif /* CONFIG_DEBUG_FS */
 
 	/* request an IRQ but keep disabled for now */
 	ret = request_threaded_irq(spi->irq, NULL,
diff --git a/drivers/net/can/spi/mcp25xxfd/mcp25xxfd_can_debugfs.h b/drivers/net/can/spi/mcp25xxfd/mcp25xxfd_can_debugfs.h
index 7c6a255c9400..ae79608b4dcf 100644
--- a/drivers/net/can/spi/mcp25xxfd/mcp25xxfd_can_debugfs.h
+++ b/drivers/net/can/spi/mcp25xxfd/mcp25xxfd_can_debugfs.h
@@ -8,10 +8,10 @@
 #ifndef __MCP25XXFD_CAN_DEBUGFS_H
 #define __MCP25XXFD_CAN_DEBUGFS_H
 
+#include "mcp25xxfd_can_priv.h"
 #ifdef CONFIG_DEBUG_FS
 
 #include <linux/debugfs.h>
-#include "mcp25xxfd_can_priv.h"
 
 #define MCP25XXFD_DEBUGFS_INCR(counter) ((counter)++)
 #define MCP25XXFD_DEBUGFS_ADD(counter, val) ((counter) += (val))
diff --git a/drivers/net/can/spi/mcp25xxfd/mcp25xxfd_can_rx.c b/drivers/net/can/spi/mcp25xxfd/mcp25xxfd_can_rx.c
index 0e3334f83f57..0988e37ba1dd 100644
--- a/drivers/net/can/spi/mcp25xxfd/mcp25xxfd_can_rx.c
+++ b/drivers/net/can/spi/mcp25xxfd/mcp25xxfd_can_rx.c
@@ -98,7 +98,9 @@ int mcp25xxfd_can_rx_submit_frame(struct mcp25xxfd_can_priv *cpriv, int fifo)
 	/* update stats */
 	net->stats.rx_packets++;
 	net->stats.rx_bytes += len;
+#ifdef CONFIG_DEBUG_FS
 	cpriv->fifos.rx.dlc_usage[dlc]++;
+#endif /* CONFIG_DEBUG_FS */
 	if (rx->flags & MCP25XXFD_CAN_OBJ_FLAGS_FDF)
 		MCP25XXFD_DEBUGFS_INCR(cpriv->fifos.rx.fd_count);
 
@@ -151,7 +153,9 @@ static int mcp25xxfd_can_rx_read_frame(struct mcp25xxfd_can_priv *cpriv,
 
 	/* we read the header plus prefetch_bytes */
 	if (read) {
+#ifdef CONFIG_DEBUG_FS
 		cpriv->stats.rx_single_reads++;
+#endif /* CONFIG_DEBUG_FS */
 		ret = mcp25xxfd_cmd_readn(spi, MCP25XXFD_SRAM_ADDR(addr),
 					  rx, sizeof(*rx) + prefetch_bytes);
 		if (ret)
@@ -186,8 +190,10 @@ static int mcp25xxfd_can_rx_read_frame(struct mcp25xxfd_can_priv *cpriv,
 			return ret;
 	}
 
+#ifdef CONFIG_DEBUG_FS
 	/* update stats */
 	cpriv->stats.rx_reads++;
+#endif /* CONFIG_DEBUG_FS */
 	if (len < prefetch_bytes) {
 		MCP25XXFD_DEBUGFS_STATS_INCR(cpriv,
 					     rx_reads_prefetched_too_many);
@@ -222,12 +228,16 @@ static int mcp25xxfd_can_read_rx_frame_bulk(struct mcp25xxfd_can_priv *cpriv,
 	struct mcp25xxfd_can_obj_rx *rx =
 		(struct mcp25xxfd_can_obj_rx *)(cpriv->sram + addr);
 	int len = (sizeof(*rx) + ((net->mtu == CANFD_MTU) ? 64 : 8)) * count;
-	int fifo, i, ret;
+	int fifo, ret;
+
+#ifdef CONFIG_DEBUG_FS
+	int i;
 
 	/* update stats */
 	MCP25XXFD_DEBUGFS_STATS_INCR(cpriv, rx_bulk_reads);
 	i = min_t(int, MCP25XXFD_CAN_RX_BULK_READ_BINS - 1, count - 1);
 	MCP25XXFD_DEBUGFS_STATS_INCR(cpriv, rx_bulk_read_sizes[i]);
+#endif /* CONFIG_DEBUG_FS */
 
 	/* we read the header plus read_min data bytes */
 	ret = mcp25xxfd_cmd_readn(cpriv->priv->spi, MCP25XXFD_SRAM_ADDR(addr),
diff --git a/drivers/net/can/spi/mcp25xxfd/mcp25xxfd_can_tx.c b/drivers/net/can/spi/mcp25xxfd/mcp25xxfd_can_tx.c
index 50252d530725..4e44619757c4 100644
--- a/drivers/net/can/spi/mcp25xxfd/mcp25xxfd_can_tx.c
+++ b/drivers/net/can/spi/mcp25xxfd/mcp25xxfd_can_tx.c
@@ -378,10 +378,12 @@ mcp25xxfd_can_tx_handle_int_tefif_optimized(struct mcp25xxfd_can_priv *cpriv,
 	if (ret)
 		return ret;
 
+#ifdef CONFIG_DEBUG_FS
 	/* update stats */
 	MCP25XXFD_DEBUGFS_STATS_INCR(cpriv, tef_optimized_reads);
 	i = min_t(int, MCP25XXFD_CAN_TEF_READ_BINS - 1, count - 1);
 	MCP25XXFD_DEBUGFS_STATS_INCR(cpriv, tef_optimized_read_sizes[i]);
+#endif /* CONFIG_DEBUG_FS */
 
 	/* now iterate those */
 	for (i = 0, fifo = cpriv->fifos.tx.start; i < cpriv->fifos.tx.count;
diff --git a/drivers/net/can/spi/mcp25xxfd/mcp25xxfd_cmd.c b/drivers/net/can/spi/mcp25xxfd/mcp25xxfd_cmd.c
index 6d895613111e..574becb351dd 100644
--- a/drivers/net/can/spi/mcp25xxfd/mcp25xxfd_cmd.c
+++ b/drivers/net/can/spi/mcp25xxfd/mcp25xxfd_cmd.c
@@ -255,7 +255,9 @@ static int _mcp25xxfd_cmd_readn_crc(struct spi_device *spi, u32 reg,
 static int mcp25xxfd_cmd_readn_crc(struct spi_device *spi, u32 reg,
 				   void *data, int n)
 {
+#if defined(CONFIG_DEBUG_FS)
 	struct mcp25xxfd_priv *priv = spi_get_drvdata(spi);
+#endif /* CONFIG_DEBUG_FS */
 	int ret;
 
 	for (; n > 0; n -= 254, reg += 254, data += 254) {
@@ -263,7 +265,7 @@ static int mcp25xxfd_cmd_readn_crc(struct spi_device *spi, u32 reg,
 		priv->stats.spi_crc_read++;
 		if (n > 254)
 			priv->stats.spi_crc_read_split++;
-#endif
+#endif /* CONFIG_DEBUG_FS */
 		ret = _mcp25xxfd_cmd_readn_crc(spi, reg, data, n);
 		if (ret)
 			return ret;
diff --git a/drivers/net/can/spi/mcp25xxfd/mcp25xxfd_debugfs.h b/drivers/net/can/spi/mcp25xxfd/mcp25xxfd_debugfs.h
index 800672442ffb..7f54cecb3b9e 100644
--- a/drivers/net/can/spi/mcp25xxfd/mcp25xxfd_debugfs.h
+++ b/drivers/net/can/spi/mcp25xxfd/mcp25xxfd_debugfs.h
@@ -19,7 +19,6 @@ void mcp25xxfd_debugfs_remove(struct mcp25xxfd_priv *priv);
 
 static inline void mcp25xxfd_debugfs_setup(struct mcp25xxfd_priv *priv)
 {
-	return 0;
 }
 
 static inline void mcp25xxfd_debugfs_remove(struct mcp25xxfd_priv *priv)
-- 
2.11.0

